[project]
name = "noos-pyk"
version = "0.1.0"
description = "A simple, yet useful Python toolkit"
# Credentials
authors = [{ name = "Noos Energy", email = "contact@noos.energy" }]
requires-python = ">=3.12.0, <3.13"
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = ["requests"]

[project.urls]
Homepage = "https://github.com/noosenergy/noos-requests"

[project.optional-dependencies]
websocket = ["websocket-client"]

[build-system]
requires = ["uv_build>=0.9.5,<0.10.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-mock",
    "ipdb",
    "ipython",
]

[tool.ruff]
line-length = 99
src = ["src"]
# Required if `requires-python` project meta missing
target-version = "py312"

[tool.ruff.lint]
ignore = [
    # Pydocstyle
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # Incompatible rules with D211 & D212
    "D203", "D213",
]
select = [
    # Flake8
    "F", "C90",
    # Pycodestyle
    "E", "W",
    # Pydocstyle
    "D",
    # Isort
    "I",
]

[tool.ruff.lint.isort]
lines-after-imports = 2
default-section = "third-party"
known-first-party = ["noos_pyk", "tests"]
section-order = ["standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
# Nearly replacement for flake8 max-complexity
max-complexity = 10

[tool.mypy]
install_types = true
non_interactive = true
incremental = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
warn_redundant_casts = true
disable_error_code = "import-untyped"

[tool.pytest.ini_options]
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test_*"
filterwarnings = "error::RuntimeWarning"
pythonpath = ["src"]
junit_family = "xunit2"
addopts = "--junitxml=.pytest_results/junit.xml"
